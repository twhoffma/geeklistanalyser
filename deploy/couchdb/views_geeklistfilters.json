{
  "_id": "_design/geeklistfilters",
  "language": "javascript",
  "views": {
    "geeklistfilters": {
      "map": "function(doc) {\n  if(doc.type === 'filtervalue'){\n\temit([doc.objectid, Date.parse(doc.analysisDate)], null);\n  }\n}"
    },
    "geeklistfilters_components": {
      "map": "function(doc) {\n  var props = ['boardgamemechanic','boardgamedesigner', 'boardgameartist', 'boardgamecategory', 'boardgamepublisher'];\n  \n  if(doc.type && doc.type == 'boardgame' && doc.geeklists){\n    \n    for(i = 0; i < doc.geeklists.length; i++){\n      for(k = 0; k < props.length; k++){\n        var p = props[k];\n        for(j = 0; j < doc[p].length; j++){\n          var m = doc[p][j];\n          emit([doc.geeklists[i].objectid, p, m], 1);\n        }\n      }\n    }\n  }\n}",
      "reduce": "function(keys, values) {\n    return sum(values);\n}"
    },
    "geeklistfilters_min_max": {
      "map": "function(doc) {\n  var props = ['minplaytime','maxplaytime', 'playingtime', 'minplayers', 'maxplayers', 'yearpublished'];\n  \n  if(doc.type && doc.type == 'boardgame' && doc.geeklists){\n    for(i = 0; i < doc.geeklists.length; i++){\n      for(k = 0; k < props.length; k++){\n        var p = props[k];\n\tvar key;\n\t\n\tif(p === 'minplaytime' || p === 'maxplaytime' || p === 'playingtime'){\n          key = 'playingtime';\n        }else if(p === 'minplayers' || p === 'maxplayers'){\n\t  key = 'numplayers';\n        }else{\n\t  key = p;\n        }\n        \n        if(doc[p]){\n\t\temit([doc.geeklists[i].objectid, key], parseInt(doc[p]));\n\t}\n      }\n    }\n  }\n}",
      "reduce": "_stats"
    }
  }
}
